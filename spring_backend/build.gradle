buildscript {
	ext {
		jjwtVersion = '0.10.7'
	}
	dependencies {
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.web'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.webjars:font-awesome:5.12.0' //CSS 아이콘 모음 

	runtime('org.mariadb.jdbc:mariadb-java-client')
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: "${jjwtVersion}"
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
	runtime group: 'io.jsonwebtoken', name: 'jjwt-impl', version: "${jjwtVersion}"
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
	runtime group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: "${jjwtVersion}"

	// https://mvnrepository.com/artifact/com.h2database/h2
	runtime group: 'com.h2database', name: 'h2', version: '1.4.200'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

apply plugin: 'docker'

task buildDocker(type: Docker, dependsOn: build) {
  // push = true
  applicationName = jar.baseName
  dockerfile = file('/src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}